{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./src/components/imageLoader.js","webpack:///./src/pages/pinPalTest.js"],"names":["$export","$find","forced","Array","P","F","find","callbackfn","this","arguments","length","undefined","ImageLoader","props","query","render","data","image","images","edges","n","console","log","filename","node","relativePath","includes","fluid","childImageSharp","className","Styles","test","imageTest"],"mappings":"2FAEA,IAAIA,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,OAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CI,KAAM,SAAcC,GAClB,OAAON,EAAMO,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,OAAR,CATU,S,ssrCC+CKC,EA1CK,SAACC,GAAD,OAClB,kBAAC,IAAD,CACEC,MAAK,aAuBLC,OAAQ,SAACC,GACP,IAAMC,EAAQD,EAAKE,OAAOC,MAAMb,MAAK,SAAAc,GAEnC,OADAC,QAAQC,IAAI,cAAgBT,EAAMU,UAC3BH,EAAEI,KAAKC,aAAaC,SAASb,EAAMU,aAE5C,OAAKN,EAGH,kBAAC,IAAD,CACEU,MAAOV,EAAMO,KAAKI,gBAAgBD,MAClCE,UAAWhB,EAAMgB,YALA,MA7BzB,UCHa,qBACb,OACE,kBAAC,IAAD,KACE,6BACE,0BAAMA,UAAWC,IAAOC,MAAxB,WACA,kBAAC,EAAD,CAAaR,SAAS,eAAeM,UAAWC,IAAOE,YACvD,kBAAC,EAAD,CAAaT,SAAS,eAAeM,UAAWC,IAAOE,YACvD,kBAAC,EAAD,CAAaT,SAAS,oBACtB,sCALF","file":"component---src-pages-pin-pal-test-js-998842fdd76794541f23.js","sourcesContent":["'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/**\n* This page contains the static query that loads all images in this project \nunder the pages directory.  \n* This allows easy image access by file name \"<ImageLoader filename=\"name.png\"/>\"\n**/\nconst ImageLoader = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile (\n          filter: {\n            extension: { regex: \"/(jpg)|(png)|(jpeg)/\" }\n            relativeDirectory: { eq: \"pages/pinPal\" }\n          }\n        ){\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 800, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n\n    render={(data) => {\n      const image = data.images.edges.find(n => {\n        console.log(\"filename = \" + props.filename);\n        return n.node.relativePath.includes(props.filename);\n      });\n      if (!image) { return null; }\n      \n      return (\n        <Img\n          fluid={image.node.childImageSharp.fluid}\n          className={props.className}\n        />\n      );\n    }}\n  />\n)\n\nexport default ImageLoader","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Styles from \"./pinPal.module.css\"\nimport Layout from \"../components/layout\"\nimport Img from \"gatsby-image\"\nimport ImageLoader from \"../components/imageLoader\"\n\nexport default () => {\n  return (\n    <Layout>\n      <div>\n        <span className={Styles.test}> hello </span>\n        <ImageLoader filename=\"pinPal/1.png\" className={Styles.imageTest}/>\n        <ImageLoader filename=\"pinPal/2.png\" className={Styles.imageTest}/>\n        <ImageLoader filename=\"pinPal/bank.png\"/>\n        <b>Intro: </b> \n        When you look around the streets, most people have their faces buried in their smartphone screens oblivous to the rich \n        possibilities in their own neighborhood.\n        My teammates and I designed an app to help explore their personal geography, a way to pin the shops, locales and spots with personal meaning in their community. \n        What if you could knock your screen to pin your location \n        using GPS?\n      </div>\n    </Layout>\n  )\n}"],"sourceRoot":""}