{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/work.module.css","webpack:///./src/components/work.js","webpack:///./src/pages/index.module.css"],"names":["copyTextToClipboard","text","navigator","clipboard","writeText","then","console","log","alert","err","error","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","msg","execCommand","removeChild","fallbackCopyTextToClipboard","data","Date","getDay","Array","className","indexContainer","intro","href","contact","onClick","target","gridWrapper","allMarkdownRemark","edges","map","node","key","id","squareWrapper","name","frontmatter","title","date","picture","square","childImageSharp","fluid","link","fields","slug","module","exports","Work","props","Styles","container","image","middle","dateText"],"mappings":"4FAAA,uFAqCA,SAASA,EAAoBC,GACtBC,UAAUC,UAIfD,UAAUC,UAAUC,UAAUH,GAAMI,MAAK,WACvCC,QAAQC,IAAI,+CACZC,MAAM,2CACL,SAASC,GACVH,QAAQI,MAAM,+BAAgCD,MAnClD,SAAqCR,GACnC,IAAIU,EAAWC,SAASC,cAAc,YACtCF,EAASG,MAAQb,EAGjBU,EAASI,MAAMC,IAAM,IACrBL,EAASI,MAAME,KAAO,IACtBN,EAASI,MAAMG,SAAW,QAE1BN,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QACTV,EAASW,SAET,IACE,IACIC,EADaX,SAASY,YAAY,QACf,aAAe,eACtClB,QAAQC,IAAI,sCAAwCgB,GAEpD,MAAOd,GACLH,QAAQI,MAAM,iCAAkCD,GAGpDG,SAASO,KAAKM,YAAYd,GAMxBe,CAA4BzB,GAoBjB,sBAAa,IAAX0B,EAAU,EAAVA,MACI,IAAIC,MACCC,SACV,IAAIC,MAAM,SAAU,SAAU,UAAW,YACrC,WAAY,SAAU,YAaxC,OAEA,kBAAC,IAAD,CAAQC,UAAWhB,IAAMiB,gBAErB,yBAAKD,UAAWhB,IAAMkB,OAAtB,2EAC2E,uBAAGC,KAAO,yBAAV,oCAE3E,yBAAKH,UAAahB,IAAMoB,SACtB,uBAAGC,QAAS,WAAOpC,EAAoB,uBAAvC,SAGA,uBAAGkC,KAAO,uDAAuDG,OAAO,UAAxE,YACA,uBAAGH,KAAO,8EAA8EG,OAAO,UAA/F,WAGF,yBAAKN,UAAWhB,IAAMuB,aACjBX,EAAKY,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKC,IAAKD,EAAKE,GAAIb,UAAWhB,IAAM8B,eAClC,kBAAC,IAAD,CACEC,KAAMJ,EAAKK,YAAYC,MACvBC,KAAMP,EAAKK,YAAYE,KACvBC,QAAUR,EAAKK,YAAYI,OAAOC,gBAAgBC,MAClDC,KAAMZ,EAAKa,OAAOC,e,qBCjGlCC,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,4BAA4B,OAAS,6BAA6B,KAAO,2BAA2B,SAAW,iC,kCCDrL,mEAyBeC,IAnBF,SAAAC,GAAK,OAChB,6BACG,uBAAG1B,KAAM0B,EAAMN,MACd,6BACE,yBAAKvB,UAAW8B,IAAOC,WACrB,kBAAC,IAAD,CAAKT,MAAOO,EAAMV,QAASnB,UAAW8B,IAAOE,QAC7C,yBAAKhC,UAAW8B,IAAOG,QACrB,yBAAKjC,UAAW8B,IAAO5D,MACpB2D,EAAMd,MAET,yBAAKf,UAAW8B,IAAOI,UACpBL,EAAMX,a,qBChBrBQ,EAAOC,QAAU,CAAC,eAAiB,sCAAsC,MAAQ,6BAA6B,QAAU,+BAA+B,YAAc,mCAAmC,cAAgB,qCAAqC,KAAO","file":"component---src-pages-index-js-39f92f87e073e69497a2.js","sourcesContent":["import React from \"react\"\nimport Work from \"../components/work\"\nimport style from \"./index.module.css\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n// import Sketch from \"react-p5\";\n// import SketchWrapper from '../components/sketchWrapper'\n// import sketch from '../scripts/sketches/shai-hulud.js'\n\n\nfunction fallbackCopyTextToClipboard(text) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  \n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } \n    catch (err) {\n      console.error('Fallback: Oops, unable to copy', err);\n    }\n\n  document.body.removeChild(textArea);\n};\n\n\nfunction copyTextToClipboard(text) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n  navigator.clipboard.writeText(text).then(function() {\n    console.log('Async: Copying to clipboard was successful!');\n    alert(\"Elena's email copied to dashboard ðŸ’¾\");\n  }, function(err) {\n    console.error('Async: Could not copy text: ', err);\n  });\n};\n\n\n/* this page is what you see in the home page \n* including name image and link to each page\n*/\n\n/* looping all nodes from md files */\n/* each node --> each md file */\n/* <work/> is a tage */\n\nexport default ({data}) => {\n  var current_date = new Date()\n  var cday = current_date.getDay()\n  var weekday = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n                    \"Thursday\", \"Friday\", \"Saturday\");\n\n\n\n   // <p>Happy {weekday[cday]}! </p> // put this inside layout if you want it back\n  // var copyCodeToClipboard = () => {\n  //   const el = this.textArea\n  //   el.select()\n  //   document.execCommand(\"copy\")\n  // }\n      // <SketchWrapper sketch={sketch}/> \n\n       \n  return (\n\n  <Layout className={style.indexContainer} >\n\n      <div className={style.intro}>\n         4th year industrial designer with a concentration in computation at the <a href = \"https://www.risd.edu/\">Rhode Island School of Design. </a>\n      </div>\n      <div className = {style.contact}>\n        <a onClick={() => {copyTextToClipboard(\"ebremner@risd.edu\");}}>\n           email\n        </a>\n        <a href = \"https://www.linkedin.com/in/elena-bremner-76ab8514b/\" target=\"_blank\" >Linkedln</a>\n        <a href = \"https://github.com/elena-bremner/elena-bremner.github.io/tree/master-source\" target=\"_blank\">Github</a>\n      </div>\n\n      <div className={style.gridWrapper}> \n          {data.allMarkdownRemark.edges.map(({ node }) =>\n            <div key={node.id} className={style.squareWrapper}>\n              <Work\n                name={node.frontmatter.title}\n                date={node.frontmatter.date}\n                picture= {node.frontmatter.square.childImageSharp.fluid}\n                link={node.fields.slug}\n              />\n            </div>\n          )}\n      </div>\n \n   \n </Layout>\n\n)\n}\n\n\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark (sort: { fields: [frontmatter___order], order: ASC }, filter: {frontmatter: { content: {eq: \"index\"} } } ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            square{\n              childImageSharp {\n                fluid(maxWidth: 1000) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            content\n            order\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"work-module--container--294Dy\",\"image\":\"work-module--image--2S-NH\",\"middle\":\"work-module--middle--1MF58\",\"text\":\"work-module--text--1DBjH\",\"dateText\":\"work-module--dateText--34Ebb\"};","import React from \"react\";\nimport Styles from \"./work.module.css\";\nimport Img from \"gatsby-image\"\n\n// argument for image, link and text for each container\n\nconst Work = props =>\n  <div>\n     <a href={props.link}> \n      <div>\n        <div className={Styles.container}>\n          <Img fluid={props.picture} className={Styles.image}/>\n          <div className={Styles.middle}>\n            <div className={Styles.text}>\n              {props.name}    \n            </div>\n            <div className={Styles.dateText}>\n              {props.date}               \n            </div>\n          </div>\n        </div>\n      </div>    \n    </a>\n  </div>  \n\nexport default Work","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indexContainer\":\"index-module--indexContainer--3yIQV\",\"intro\":\"index-module--intro--1wqAK\",\"contact\":\"index-module--contact--1t6Ht\",\"gridWrapper\":\"index-module--gridWrapper--21BnZ\",\"squareWrapper\":\"index-module--squareWrapper--LEGDN\",\"mark\":\"index-module--mark--3E7kS\"};"],"sourceRoot":""}